<!doctype html>
<head><link rel="stylesheet" href="https://bterlson.github.com/ecmarkup/elements.css">
</head><body><div><h2>Table of Contents</h2><ol class="toc"><li><a href="#"><span class="secnum"></span> Intro</a><ol class="toc"><li><a href="#"><span class="secnum"></span> Sub Intro</a></li></ol></li><li><a href="#"><span class="secnum">1</span> Clause Foo(<var>a</var>, <var>b</var>)</a><ol class="toc"><li><a href="#Foo"><span class="secnum">1.1</span> Sub Clause</a></li><li><a href="#Bar"><span class="secnum">1.2</span> Sub Clause</a></li><li><a href="#Baz"><span class="secnum">1.3</span> Header</a><ol class="toc"><li><a href="#import3"><span class="secnum">1.3.1</span> Import 3</a></li></ol></li></ol></li><li><a href="#"><span class="secnum">A</span> Annex</a></li></ol></div><emu-intro>
  <h1><span class="secnum"></span>Intro</h1>
  <emu-intro>
    <h1><span class="secnum"></span>Sub Intro</h1>
  </emu-intro>
</emu-intro>

<emu-clause>
  <h1><span class="secnum">1</span>Clause Foo(<var>a</var>, <var>b</var>)</h1>
  <emu-clause id="Foo" aoid="Foo">
    <h1><span class="secnum">1.1</span>Sub Clause</h1>

    <emu-note><span class="note">Note 1</span>Note 1!</emu-note>
    <emu-note><span class="note">Note 2</span>Note 2!</emu-note>
  </emu-clause>

  <emu-clause id="Bar" aoid="">
    <h1><span class="secnum">1.2</span>Sub Clause</h1>
  </emu-clause>

  <emu-clause id="Baz" aoid="">
  <h1><span class="secnum">1.3</span>Header</h1>
  <p>text</p>
  <p><emu-nt>nonterminal</emu-nt> <code>code</code> <emu-val>value</emu-val>.</p>

  <emu-clause id="import3">
  <h1><span class="secnum">1.3.1</span>Import 3</h1>
  wtf??
</emu-clause>

</emu-clause>


  <emu-alg><ol>
  <li>Call <a href="#Foo">Foo</a>(<var>a</var>).</li>
  <li>Call <a href="#Bar">Bar</a>(<code>toString</code>).</li>
  <li>Call <a href="#Baz">Baz</a>(<emu-val>true</emu-val>).
    <ol>
      <li>Do something else.</li>
      <li>And again.</li>
    </ol>
  </li>
</ol></emu-alg>

  <emu-note><span class="note">Note</span>Note!</emu-note>

  <emu-production name="WhileStatement">
    <emu-nt>WhileStatement<emu-mods></emu-mods><emu-mods></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs><emu-t>while</emu-t><emu-t>(</emu-t><emu-nt>Expression<emu-mods></emu-mods></emu-nt><emu-t>)</emu-t><emu-nt>Statement<emu-mods></emu-mods></emu-nt></emu-rhs>
  </emu-production>

  <emu-production name="ArgumentList">
    <emu-nt>ArgumentList<emu-mods></emu-mods><emu-mods></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs><emu-nt>AssignmentExpression<emu-mods></emu-mods></emu-nt></emu-rhs>

    <emu-rhs><emu-nt>ArgumentList<emu-mods></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt>AssignmentExpression<emu-mods></emu-mods></emu-nt></emu-rhs>
  </emu-production>

  <emu-production name="SourceCharacter" type="lexical">
    <emu-nt>SourceCharacter<emu-mods></emu-mods><emu-mods></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs><emu-gprose>any Unicode code point</emu-gprose></emu-rhs>
  </emu-production>

  <emu-production name="ExpressionStatement" params="Yield">
    <emu-nt>ExpressionStatement<emu-mods> [Yield]</emu-mods><emu-mods></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs><emu-gann>[lookahead âˆ‰ {
        <emu-t>{</emu-t>,
        <emu-t>function</emu-t>,
        <emu-t>class</emu-t>,
        <emu-t>let [</emu-t>
      }]</emu-gann></emu-rhs>
  </emu-production>

  <emu-production name="StatementList" params="Return, In">
    <emu-nt>StatementList<emu-mods> [Return, In]</emu-mods><emu-mods></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs constraints="~Return"><emu-constraints>[~Return]</emu-constraints><emu-nt>ReturnStatement<emu-mods></emu-mods></emu-nt></emu-rhs>
    <emu-rhs><emu-nt>ExpressionStatement<emu-mods></emu-mods></emu-nt></emu-rhs>
  </emu-production>

  <emu-production name="Identifier" type="lexical">
    <emu-nt>Identifier<emu-mods></emu-mods><emu-mods></emu-mods></emu-nt><emu-geq>::</emu-geq><emu-rhs><emu-nt>IdentifierName<emu-mods></emu-mods></emu-nt><emu-gmod>but not
    <emu-nt>ReservedWord<emu-mods></emu-mods></emu-nt></emu-gmod></emu-rhs>
  </emu-production>

  <pre><code class="language-javascript hljs">
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params"></span>) </span>{ };
    test();
  </code></pre>
</emu-clause>

<emu-annex>
  <h1><span class="secnum">A</span>Annex</h1>
</emu-annex>
</body>